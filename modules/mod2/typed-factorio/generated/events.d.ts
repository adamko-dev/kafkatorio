/** @noSelfInFile */

/**
 * Called when a {@link https://wiki.factorio.com/Prototype/CustomInput CustomInput} is activated.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#CustomInputEvent View documentation}
 */
interface CustomInputEvent {
  /** The player that activated the custom input. */
  readonly player_index: uint
  /** The prototype name of the custom input that was activated. */
  readonly input_name: string
  /** The mouse cursor position when the custom input was activated. */
  readonly cursor_position: Position
  /** Information about the prototype that is selected when the custom input is used. `nil` if none is selected. */
  readonly selected_prototype?: SelectedPrototypeData
  /** Identifier of the event */
  readonly name: string
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a unit/group completes a command.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_ai_command_completed View documentation}
 */
interface OnAiCommandCompletedEvent {
  /** Unit_number/group_number of the unit/group which just completed a command. */
  readonly unit_number: uint
  readonly result: defines.behavior_result
  /** Was this command generated by a distraction. */
  readonly was_distracted: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_ai_command_completed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an area of the map is cloned.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_area_cloned View documentation}
 */
interface OnAreaClonedEvent {
  readonly source_surface: LuaSurface
  readonly source_area: BoundingBox
  readonly destination_surface: LuaSurface
  readonly destination_area: BoundingBox
  readonly destination_force?: LuaForce
  readonly clone_tiles: boolean
  readonly clone_entities: boolean
  readonly clone_decoratives: boolean
  readonly clear_destination_entities: boolean
  readonly clear_destination_decoratives: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_area_cloned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a biter migration builds a base.
 *
 * **Note**: This will be called multiple times for each migration, once for every biter that is sacrificed to build
 * part of the new base.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_biter_base_built View documentation}
 */
interface OnBiterBaseBuiltEvent {
  /** The entity that was built. */
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_biter_base_built
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a set of positions on the map is cloned.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_brush_cloned View documentation}
 */
interface OnBrushClonedEvent {
  readonly source_offset: TilePosition
  readonly destination_offset: TilePosition
  readonly source_surface: LuaSurface
  readonly source_positions: TilePosition[]
  readonly destination_surface: LuaSurface
  readonly destination_force?: LuaForce
  readonly clone_tiles: boolean
  readonly clone_entities: boolean
  readonly clone_decoratives: boolean
  readonly clear_destination_entities: boolean
  readonly clear_destination_decoratives: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_brush_cloned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a {@link defines.command.build_base} command reaches its destination, and before building starts.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_build_base_arrived View documentation}
 */
interface OnBuildBaseArrivedEvent {
  /** The unit the command was assigned to. */
  readonly unit?: LuaEntity
  /** The unit group the command was assigned to. */
  readonly group?: LuaUnitGroup
  /** Identifier of the event */
  readonly name: typeof defines.events.on_build_base_arrived
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when player builds something. Can be filtered using {@link LuaPlayerBuiltEntityEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_built_entity View documentation}
 */
interface OnBuiltEntityEvent {
  readonly created_entity: LuaEntity
  readonly player_index: uint
  readonly stack: LuaItemStack
  /** The item prototype used to build the entity. Note this won't exist in some situations (built from blueprint, undo, etc). */
  readonly item?: LuaItemPrototype
  /** The tags associated with this entity if any. */
  readonly tags?: Tags
  /** Identifier of the event */
  readonly name: typeof defines.events.on_built_entity
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the deconstruction of an entity is canceled. Can be filtered using
 * {@link LuaEntityDeconstructionCancelledEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_cancelled_deconstruction View documentation}
 */
interface OnCancelledDeconstructionEvent {
  readonly entity: LuaEntity
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_cancelled_deconstruction
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the upgrade of an entity is canceled. Can be filtered using {@link LuaUpgradeCancelledEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_cancelled_upgrade View documentation}
 */
interface OnCancelledUpgradeEvent {
  readonly entity: LuaEntity
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_cancelled_upgrade
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a character corpse expires due to timeout or all of the items being removed from it.
 *
 * **Note**: this is not called if the corpse is mined. See {@link defines.events.on_pre_player_mined_item} to detect that.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_character_corpse_expired View documentation}
 */
interface OnCharacterCorpseExpiredEvent {
  /** The corpse. */
  readonly corpse: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_character_corpse_expired
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a chart tag is created.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_chart_tag_added View documentation}
 */
interface OnChartTagAddedEvent {
  readonly tag: LuaCustomChartTag
  readonly force: LuaForce
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_chart_tag_added
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a chart tag is modified by a player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_chart_tag_modified View documentation}
 */
interface OnChartTagModifiedEvent {
  readonly tag: LuaCustomChartTag
  readonly player_index?: uint
  readonly force: LuaForce
  readonly old_text: string
  readonly old_icon?: SignalID
  readonly old_player?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_chart_tag_modified
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called just before a chart tag is deleted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_chart_tag_removed View documentation}
 */
interface OnChartTagRemovedEvent {
  readonly tag: LuaCustomChartTag
  readonly force: LuaForce
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_chart_tag_removed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a chunk is charted or re-charted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_chunk_charted View documentation}
 */
interface OnChunkChartedEvent {
  readonly surface_index: uint
  readonly position: ChunkPosition
  /** Area of the chunk. */
  readonly area: BoundingBox
  readonly force: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_chunk_charted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when one or more chunks are deleted using {@link LuaSurface.delete_chunk LuaSurface::delete_chunk}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_chunk_deleted View documentation}
 */
interface OnChunkDeletedEvent {
  readonly surface_index: uint
  /** The chunks deleted. */
  readonly positions: ChunkPosition[]
  /** Identifier of the event */
  readonly name: typeof defines.events.on_chunk_deleted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a chunk is generated.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_chunk_generated View documentation}
 */
interface OnChunkGeneratedEvent {
  /** Area of the chunk. */
  readonly area: BoundingBox
  /** Position of the chunk. */
  readonly position: ChunkPosition
  /** The surface the chunk is on. */
  readonly surface: LuaSurface
  /** Identifier of the event */
  readonly name: typeof defines.events.on_chunk_generated
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a combat robot expires through a lack of energy, or timeout.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_combat_robot_expired View documentation}
 */
interface OnCombatRobotExpiredEvent {
  readonly robot: LuaEntity
  /** The entity that owns the robot if any. */
  readonly owner?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_combat_robot_expired
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a message is sent to the in-game console, either by a player or through the server interface.
 *
 * **Note**: This event only fires for plain messages, not for any commands (including `/shout` or `/whisper`).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_console_chat View documentation}
 */
interface OnConsoleChatEvent {
  /** The player doing the chatting, if any. */
  readonly player_index?: uint
  /** The chat message that was sent. */
  readonly message: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_console_chat
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when someone enters a command-like message regardless of it being a valid command.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_console_command View documentation}
 */
interface OnConsoleCommandEvent {
  /** The player if any. */
  readonly player_index?: uint
  /** The command as typed without the preceding forward slash ('/'). */
  readonly command: string
  /** The parameters provided if any. */
  readonly parameters: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_console_command
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a cutscene is cancelled by the player or by script.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_cutscene_cancelled View documentation}
 */
interface OnCutsceneCancelledEvent {
  /** The player the cutscene was shown to. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_cutscene_cancelled
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a cutscene is playing, each time it reaches a waypoint in that cutscene.
 *
 * This refers to an index in the table previously passed to set_controller which started the cutscene.
 *
 * **Note**: Due to implementation omission, waypoint_index is 0-based.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_cutscene_waypoint_reached View documentation}
 */
interface OnCutsceneWaypointReachedEvent {
  /** The player index of the player viewing the cutscene. */
  readonly player_index: uint
  /** The index of the waypoint we just completed. */
  readonly waypoint_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_cutscene_waypoint_reached
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the map difficulty settings are changed.
 *
 * **Note**: It's not guaranteed that both settings are changed - just that at least one has been changed.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_difficulty_settings_changed View documentation}
 */
interface OnDifficultySettingsChangedEvent {
  readonly old_recipe_difficulty: uint
  readonly old_technology_difficulty: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_difficulty_settings_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity is cloned. Can be filtered for the source entity using {@link LuaEntityClonedEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_cloned View documentation}
 */
interface OnEntityClonedEvent {
  readonly source: LuaEntity
  readonly destination: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_cloned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity is damaged. Can be filtered using {@link LuaEntityDamagedEventFilter}.
 *
 * **Note**: This is not called when an entities health is set directly by another mod.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_damaged View documentation}
 */
interface OnEntityDamagedEvent {
  readonly entity: LuaEntity
  readonly damage_type: LuaDamagePrototype
  /** The damage amount before resistances. */
  readonly original_damage_amount: float
  /** The damage amount after resistances. */
  readonly final_damage_amount: float
  /** The health of the entity after the damage was applied. */
  readonly final_health: float
  /** The entity that did the attacking if available. */
  readonly cause?: LuaEntity
  /** The force that did the attacking if any. */
  readonly force?: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_damaged
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after an entity is destroyed that has been registered with
 * {@link LuaBootstrap.register_on_entity_destroyed LuaBootstrap::register_on_entity_destroyed}
 *
 * **Note**: Depending on when a given entity is destroyed this will be fired at the end of the current tick or end of
 * the next tick.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_destroyed View documentation}
 */
interface OnEntityDestroyedEvent {
  readonly registration_number: uint64
  readonly unit_number?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_destroyed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity dies. Can be filtered using {@link LuaEntityDiedEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_died View documentation}
 */
interface OnEntityDiedEvent {
  /** The entity that died. */
  readonly entity: LuaEntity
  /** The entity that did the killing if available. */
  readonly cause?: LuaEntity
  /** The loot generated by this entity if any. */
  readonly loot: LuaInventory
  /** The force that did the killing if any. */
  readonly force?: LuaForce
  /** The damage type if any. */
  readonly damage_type?: LuaDamagePrototype
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_died
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when one of an entity's personal logistic slots changes.
 *
 * **Note**: "Personal logistic slot" refers to a character or vehicle's personal request / auto-trash slots, not the
 * request slots on logistic chests.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_logistic_slot_changed View documentation}
 */
interface OnEntityLogisticSlotChangedEvent {
  /** The player who changed the slot, or `nil` if changed by script. */
  readonly player_index?: uint
  /** The entity for whom a logistic slot was changed. */
  readonly entity: LuaEntity
  /** The slot index that was changed. */
  readonly slot_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_logistic_slot_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after an entity has been renamed either by the player or through script.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_renamed View documentation}
 */
interface OnEntityRenamedEvent {
  /** If by_script is true this will not be included. */
  readonly player_index?: uint
  readonly by_script: boolean
  readonly entity: LuaEntity
  readonly old_name: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_renamed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after entity copy-paste is done.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_settings_pasted View documentation}
 */
interface OnEntitySettingsPastedEvent {
  readonly player_index: uint
  /** The source entity settings were copied from. */
  readonly source: LuaEntity
  /** The destination entity settings were copied to. */
  readonly destination: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_settings_pasted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity is spawned by a EnemySpawner
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_entity_spawned View documentation}
 */
interface OnEntitySpawnedEvent {
  readonly spawner: LuaEntity
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_entity_spawned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after equipment is inserted into an equipment grid.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_equipment_inserted View documentation}
 */
interface OnEquipmentInsertedEvent {
  /** The equipment grid inserted into. */
  readonly grid: LuaEquipmentGrid
  /** The equipment inserted. */
  readonly equipment: LuaEquipment
  /** Identifier of the event */
  readonly name: typeof defines.events.on_equipment_inserted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after equipment is removed from an equipment grid.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_equipment_removed View documentation}
 */
interface OnEquipmentRemovedEvent {
  /** The equipment grid removed from. */
  readonly grid: LuaEquipmentGrid
  /** The equipment removed. */
  readonly equipment: string
  /** The count of equipment removed. */
  readonly count: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_equipment_removed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the a forces cease fire values change.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_force_cease_fire_changed View documentation}
 */
interface OnForceCeaseFireChangedEvent {
  /** The force who's cease fire changed. */
  readonly force: LuaForce
  /** Which force was added or removed. */
  readonly other_force: LuaForce
  /** If the other force was added or removed. */
  readonly added: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_force_cease_fire_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a new force is created using `game.create_force()`
 *
 * **Note**: This is not called when the default forces (`'player'`, `'enemy'`, `'neutral'`) are created as they will
 * always exist.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_force_created View documentation}
 */
interface OnForceCreatedEvent {
  /** The newly created force. */
  readonly force: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_force_created
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the a forces friends change.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_force_friends_changed View documentation}
 */
interface OnForceFriendsChangedEvent {
  /** The force who's friends changed. */
  readonly force: LuaForce
  /** Which force was added or removed. */
  readonly other_force: LuaForce
  /** If the other force was added or removed. */
  readonly added: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_force_friends_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaForce.reset LuaForce::reset} is finished.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_force_reset View documentation}
 */
interface OnForceResetEvent {
  readonly force: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_force_reset
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after two forces have been merged using `game.merge_forces()`.
 *
 * **Note**: The source force is invalidated before this event is called and the name can be re-used in this event if desired.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_forces_merged View documentation}
 */
interface OnForcesMergedEvent {
  /** The force destroyed. */
  readonly source_name: string
  /** The index of the destroyed force. */
  readonly source_index: uint
  /** The force entities where reassigned to. */
  readonly destination: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_forces_merged
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when two forces are about to be merged using `game.merge_forces()`.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_forces_merging View documentation}
 */
interface OnForcesMergingEvent {
  /** The force to be destroyed */
  readonly source: LuaForce
  /** The force to reassign entities to. */
  readonly destination: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_forces_merging
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a game is created from a scenario. This is fired for every mod, even when the scenario's save data
 * already includes it. In those cases however, {@link LuaBootstrap.on_init LuaBootstrap::on_init} is not fired.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_game_created_from_scenario View documentation}
 */
interface OnGameCreatedFromScenarioEvent {
  /** Identifier of the event */
  readonly name: typeof defines.events.on_game_created_from_scenario
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} checked state is changed (related to checkboxes and radio buttons).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_checked_state_changed View documentation}
 */
interface OnGuiCheckedStateChangedEvent {
  /** The element whose checked state changed. */
  readonly element: LuaGuiElement
  /** The player who did the change. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_checked_state_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} is clicked.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_click View documentation}
 */
interface OnGuiClickEvent {
  /** The clicked element. */
  readonly element: LuaGuiElement
  /** The player who did the clicking. */
  readonly player_index: uint
  /** The mouse button used if any. */
  readonly button: defines.mouse_button_type
  /** If alt was pressed. */
  readonly alt: boolean
  /** If control was pressed. */
  readonly control: boolean
  /** If shift was pressed. */
  readonly shift: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_click
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player closes the GUI they have open.
 *
 * **Note**: This is only called if the player explicitly closed the GUI.
 *
 * **Note**: It's not advised to open any other GUI during this event because if this is run as a request to open a
 * different GUI the game will force close the new opened GUI without notice to ensure the original requested GUI is opened.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_closed View documentation}
 */
interface OnGuiClosedEvent {
  /** The player. */
  readonly player_index: uint
  /** The GUI type that was open. */
  readonly gui_type: defines.gui_type
  /** The entity that was open */
  readonly entity?: LuaEntity
  /** The item that was open */
  readonly item?: LuaItemStack
  /** The equipment that was open */
  readonly equipment?: LuaEquipment
  /** The other player that was open */
  readonly other_player?: LuaPlayer
  /** The custom GUI element that was open */
  readonly element?: LuaGuiElement
  /** The technology that was automatically selected when opening the research GUI */
  readonly technology?: LuaTechnology
  /** The tile position that was open */
  readonly tile_position?: TilePosition
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_closed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a {@link LuaGuiElement} is confirmed, for example by pressing Enter in a textfield.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_confirmed View documentation}
 */
interface OnGuiConfirmedEvent {
  /** The confirmed element. */
  readonly element: LuaGuiElement
  /** The player who did the confirming. */
  readonly player_index: uint
  /** If alt was pressed. */
  readonly alt: boolean
  /** If control was pressed. */
  readonly control: boolean
  /** If shift was pressed. */
  readonly shift: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_confirmed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} element value is changed (related to choose element buttons).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_elem_changed View documentation}
 */
interface OnGuiElemChangedEvent {
  /** The element whose element value changed. */
  readonly element: LuaGuiElement
  /** The player who did the change. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_elem_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} element location is changed (related to frames in `player.gui.screen`).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_location_changed View documentation}
 */
interface OnGuiLocationChangedEvent {
  /** The element whose location changed. */
  readonly element: LuaGuiElement
  /** The player who did the change. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_location_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player opens a GUI.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_opened View documentation}
 */
interface OnGuiOpenedEvent {
  /** The player. */
  readonly player_index: uint
  /** The GUI type that was opened. */
  readonly gui_type: defines.gui_type
  /** The entity that was opened */
  readonly entity?: LuaEntity
  /** The item that was opened */
  readonly item?: LuaItemStack
  /** The equipment that was opened */
  readonly equipment?: LuaEquipment
  /** The other player that was opened */
  readonly other_player?: LuaPlayer
  /** The custom GUI element that was opened */
  readonly element?: LuaGuiElement
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_opened
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} selected tab is changed (related to tabbed-panes).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_selected_tab_changed View documentation}
 */
interface OnGuiSelectedTabChangedEvent {
  /** The tabbed pane whose selected tab changed. */
  readonly element: LuaGuiElement
  /** The player who did the change. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_selected_tab_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} selection state is changed (related to drop-downs and listboxes).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_selection_state_changed View documentation}
 */
interface OnGuiSelectionStateChangedEvent {
  /** The element whose selection state changed. */
  readonly element: LuaGuiElement
  /** The player who did the change. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_selection_state_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} switch state is changed (related to switches).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_switch_state_changed View documentation}
 */
interface OnGuiSwitchStateChangedEvent {
  /** The switch whose switch state changed. */
  readonly element: LuaGuiElement
  /** The player who did the change. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_switch_state_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} text is changed by the player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_text_changed View documentation}
 */
interface OnGuiTextChangedEvent {
  /** The edited element. */
  readonly element: LuaGuiElement
  /** The player who did the edit. */
  readonly player_index: uint
  /** The new text in the element. */
  readonly text: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_text_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaGuiElement} slider value is changed (related to the slider element).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_gui_value_changed View documentation}
 */
interface OnGuiValueChangedEvent {
  /** The element whose value changed. */
  readonly element: LuaGuiElement
  /** The player who did the change. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_gui_value_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a land mine is armed.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_land_mine_armed View documentation}
 */
interface OnLandMineArmedEvent {
  readonly mine: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_land_mine_armed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a custom Lua shortcut is pressed.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_lua_shortcut View documentation}
 */
interface OnLuaShortcutEvent {
  readonly player_index: uint
  /** Shortcut prototype name of the shortcut that was clicked. */
  readonly prototype_name: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_lua_shortcut
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity is marked for deconstruction with the Deconstruction planner or via script. Can be filtered
 * using {@link LuaEntityMarkedForDeconstructionEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_marked_for_deconstruction View documentation}
 */
interface OnMarkedForDeconstructionEvent {
  readonly entity: LuaEntity
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_marked_for_deconstruction
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity is marked for upgrade with the Upgrade planner or via script. Can be filtered using
 * {@link LuaEntityMarkedForUpgradeEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_marked_for_upgrade View documentation}
 */
interface OnMarkedForUpgradeEvent {
  readonly entity: LuaEntity
  readonly target: LuaEntityPrototype
  readonly player_index?: uint
  /** The new direction (if any) */
  readonly direction?: defines.direction
  /** Identifier of the event */
  readonly name: typeof defines.events.on_marked_for_upgrade
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player purchases some offer from a `market` entity.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_market_item_purchased View documentation}
 */
interface OnMarketItemPurchasedEvent {
  /** The player who did the purchasing. */
  readonly player_index: uint
  /** The market entity. */
  readonly market: LuaEntity
  /** The index of the offer purchased. */
  readonly offer_index: uint
  /** The amount of offers purchased. */
  readonly count: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_market_item_purchased
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player uses the 'Open item GUI' control on an item defined with the 'mod-openable' flag
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_mod_item_opened View documentation}
 */
interface OnModItemOpenedEvent {
  /** The player. */
  readonly player_index: uint
  /** The item clicked on. */
  readonly item: LuaItemPrototype
  /** Identifier of the event */
  readonly name: typeof defines.events.on_mod_item_opened
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly after a permission group is added.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_permission_group_added View documentation}
 */
interface OnPermissionGroupAddedEvent {
  /** The player that added the group. */
  readonly player_index: uint
  /** The group added. */
  readonly group: LuaPermissionGroup
  /** Identifier of the event */
  readonly name: typeof defines.events.on_permission_group_added
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly after a permission group is deleted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_permission_group_deleted View documentation}
 */
interface OnPermissionGroupDeletedEvent {
  /** The player doing the deletion. */
  readonly player_index: uint
  /** The group that was deleted. */
  readonly group_name: string
  /** The group id that was deleted. */
  readonly id: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_permission_group_deleted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly after a permission group is edited in some way.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_permission_group_edited View documentation}
 */
interface OnPermissionGroupEditedEvent {
  /** The player that did the editing. */
  readonly player_index: uint
  /** The group being edited. */
  readonly group: LuaPermissionGroup
  /** The edit type: "add-permission", "remove-permission", "enable-all", "disable-all", "add-player", "remove-player", "rename". */
  readonly type:
    | "add-permission"
    | "remove-permission"
    | "enable-all"
    | "disable-all"
    | "add-player"
    | "remove-player"
    | "rename"
  /** The action when the `type` is "add-permission" or "remove-permission". */
  readonly action: defines.input_action
  /** The other player when the `type` is "add-player" or "remove-player". */
  readonly other_player_index: uint
  /** The old group name when the `type` is "rename". */
  readonly old_name: string
  /** The new group name when the `type` is "rename". */
  readonly new_name: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_permission_group_edited
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly after a permission string is imported.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_permission_string_imported View documentation}
 */
interface OnPermissionStringImportedEvent {
  /** The player that imported the string. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_permission_string_imported
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player picks up an item.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_picked_up_item View documentation}
 */
interface OnPickedUpItemEvent {
  readonly item_stack: SimpleItemStack
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_picked_up_item
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player alt-selects an area with a selection-tool item.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_alt_selected_area View documentation}
 */
interface OnPlayerAltSelectedAreaEvent {
  /** The player doing the selection. */
  readonly player_index: uint
  /** The surface selected. */
  readonly surface: LuaSurface
  /** The area selected. */
  readonly area: BoundingBox
  /** The item used to select the area. */
  readonly item: string
  /** The entities selected. */
  readonly entities: LuaEntity[]
  /** The tiles selected. */
  readonly tiles: LuaTile[]
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_alt_selected_area
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a players ammo inventory changed in some way.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_ammo_inventory_changed View documentation}
 */
interface OnPlayerAmmoInventoryChangedEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_ammo_inventory_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a players armor inventory changed in some way.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_armor_inventory_changed View documentation}
 */
interface OnPlayerArmorInventoryChangedEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_armor_inventory_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is banned.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_banned View documentation}
 */
interface OnPlayerBannedEvent {
  /** The player banned. */
  readonly player_index?: uint
  /** The banned player name. */
  readonly player_name: string
  /** The player that did the banning if any. */
  readonly by_player?: uint
  /** The reason given if any. */
  readonly reason?: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_banned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player builds tiles.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_built_tile View documentation}
 */
interface OnPlayerBuiltTileEvent {
  readonly player_index: uint
  /** The surface the tile(s) were built on. */
  readonly surface_index: uint
  /** The position data. */
  readonly tiles: OldTileAndPosition[]
  /** The tile prototype that was placed. */
  readonly tile: LuaTilePrototype
  /** The item type used to build the tiles */
  readonly item?: LuaItemPrototype
  /** The stack used to build the tiles (may be empty if all of the items where used to build the tiles). */
  readonly stack?: LuaItemStack
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_built_tile
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player cancels crafting.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_cancelled_crafting View documentation}
 */
interface OnPlayerCancelledCraftingEvent {
  /** The player that did the crafting. */
  readonly player_index: uint
  /** The crafting items returned to the player's inventory. */
  readonly items: LuaInventory
  /** The recipe that has been cancelled. */
  readonly recipe: LuaRecipe
  /** The number of crafts that have been cancelled. */
  readonly cancel_count: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_cancelled_crafting
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player changes forces.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_changed_force View documentation}
 */
interface OnPlayerChangedForceEvent {
  /** The player who changed forces. */
  readonly player_index: uint
  /** The old force. */
  readonly force: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_changed_force
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the tile position a player is located at changes.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_changed_position View documentation}
 */
interface OnPlayerChangedPositionEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_changed_position
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player changes surfaces.
 *
 * **Note**: In the instance a player is moved off a surface due to it being deleted this is not called.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_changed_surface View documentation}
 */
interface OnPlayerChangedSurfaceEvent {
  /** The player who changed surfaces. */
  readonly player_index: uint
  /** The surface index the player was on. */
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_changed_surface
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when cheat mode is disabled on a player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_cheat_mode_disabled View documentation}
 */
interface OnPlayerCheatModeDisabledEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_cheat_mode_disabled
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when cheat mode is enabled on a player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_cheat_mode_enabled View documentation}
 */
interface OnPlayerCheatModeEnabledEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_cheat_mode_enabled
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player clicks a gps tag
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_clicked_gps_tag View documentation}
 */
interface OnPlayerClickedGpsTagEvent {
  /** Index of the player */
  readonly player_index: uint
  /** Map position contained in gps tag */
  readonly position: Position
  /** Surface name contained in gps tag, even when such surface does not exists */
  readonly surface: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_clicked_gps_tag
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player clicks the "confirm" button in the configure Blueprint GUI.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_configured_blueprint View documentation}
 */
interface OnPlayerConfiguredBlueprintEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_configured_blueprint
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player configures spidertron remote to be connected with a given spidertron
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_configured_spider_remote View documentation}
 */
interface OnPlayerConfiguredSpiderRemoteEvent {
  /** The player that configured the remote. */
  readonly player_index: uint
  /** Spider vehicle to which remote was connected to. */
  readonly vehicle: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_configured_spider_remote
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player finishes crafting an item. This event fires just before the results are inserted into the
 * player's inventory, not when the crafting is queued (see {@link OnPrePlayerCraftedItemEvent on_pre_player_crafted_item}).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_crafted_item View documentation}
 */
interface OnPlayerCraftedItemEvent {
  /** The item that has been crafted. */
  readonly item_stack: LuaItemStack
  /** The player doing the crafting. */
  readonly player_index: uint
  /** The recipe used to craft this item. */
  readonly recipe: LuaRecipe
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_crafted_item
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after the player was created.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_created View documentation}
 */
interface OnPlayerCreatedEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_created
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a players cursorstack changed in some way.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_cursor_stack_changed View documentation}
 */
interface OnPlayerCursorStackChangedEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_cursor_stack_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player selects an area with a deconstruction planner.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_deconstructed_area View documentation}
 */
interface OnPlayerDeconstructedAreaEvent {
  /** The player doing the selection. */
  readonly player_index: uint
  /** The surface selected. */
  readonly surface: LuaSurface
  /** The area selected. */
  readonly area: BoundingBox
  /** The item used to select the area. */
  readonly item: string
  /** If normal selection or alt selection was used. */
  readonly alt: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_deconstructed_area
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is demoted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_demoted View documentation}
 */
interface OnPlayerDemotedEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_demoted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player dies.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_died View documentation}
 */
interface OnPlayerDiedEvent {
  readonly player_index: uint
  readonly cause?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_died
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the display resolution changes for a given player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_display_resolution_changed View documentation}
 */
interface OnPlayerDisplayResolutionChangedEvent {
  /** The player */
  readonly player_index: uint
  /** The old display resolution */
  readonly old_resolution: DisplayResolution
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_display_resolution_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the display scale changes for a given player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_display_scale_changed View documentation}
 */
interface OnPlayerDisplayScaleChangedEvent {
  /** The player */
  readonly player_index: uint
  /** The old display scale */
  readonly old_scale: double
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_display_scale_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player's driving state has changed, this means a player has either entered or left a vehicle.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_driving_changed_state View documentation}
 */
interface OnPlayerDrivingChangedStateEvent {
  readonly player_index: uint
  /** The vehicle if any. */
  readonly entity?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_driving_changed_state
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player drops an item on the ground.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_dropped_item View documentation}
 */
interface OnPlayerDroppedItemEvent {
  readonly player_index: uint
  /** The item-on-ground entity. */
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_dropped_item
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player fast-transfers something to or from an entity.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_fast_transferred View documentation}
 */
interface OnPlayerFastTransferredEvent {
  /** The player transferred from or to. */
  readonly player_index: uint
  /** The entity transferred from or to. */
  readonly entity: LuaEntity
  /** Whether the transfer was from player to entity. If `false`, the transfer was from entity to player. */
  readonly from_player: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_fast_transferred
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after player flushed fluid
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_flushed_fluid View documentation}
 */
interface OnPlayerFlushedFluidEvent {
  /** Index of the player */
  readonly player_index: uint
  /** Name of a fluid that was flushed */
  readonly fluid: string
  /** Amount of fluid that was removed */
  readonly amount: double
  /** Entity from which flush was performed */
  readonly entity: LuaEntity
  /** True if flush was requested only on this entity */
  readonly only_this_entity: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_flushed_fluid
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a players gun inventory changed in some way.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_gun_inventory_changed View documentation}
 */
interface OnPlayerGunInventoryChangedEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_gun_inventory_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player joins the game.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_joined_game View documentation}
 */
interface OnPlayerJoinedGameEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_joined_game
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is kicked.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_kicked View documentation}
 */
interface OnPlayerKickedEvent {
  /** The player kicked. */
  readonly player_index: uint
  /** The player that did the kicking if any. */
  readonly by_player?: uint
  /** The reason given if any. */
  readonly reason?: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_kicked
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player leaves the game.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_left_game View documentation}
 */
interface OnPlayerLeftGameEvent {
  readonly player_index: uint
  readonly reason: defines.disconnect_reason
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_left_game
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a players main inventory changed in some way.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_main_inventory_changed View documentation}
 */
interface OnPlayerMainInventoryChangedEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_main_inventory_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after the results of an entity being mined are collected just before the entity is destroyed. After this event
 * any items in the buffer will be transferred into the player as if they came from mining the entity. Can be filtered
 * using {@link LuaPlayerMinedEntityEventFilter}.
 *
 * **Note**: The buffer inventory is special in that it's only valid during this event and has a dynamic size expanding
 * as more items are transferred into it.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_mined_entity View documentation}
 */
interface OnPlayerMinedEntityEvent {
  /** The index of the player doing the mining. */
  readonly player_index: uint
  /** The entity that has been mined. */
  readonly entity: LuaEntity
  /** The temporary inventory that holds the result of mining the entity. */
  readonly buffer: LuaInventory
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_mined_entity
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player mines something.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_mined_item View documentation}
 */
interface OnPlayerMinedItemEvent {
  /** The item given to the player */
  readonly item_stack: SimpleItemStack
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_mined_item
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player mines tiles.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_mined_tile View documentation}
 */
interface OnPlayerMinedTileEvent {
  readonly player_index: uint
  /** The surface the tile(s) were mined from. */
  readonly surface_index: uint
  /** The position data. */
  readonly tiles: OldTileAndPosition[]
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_mined_tile
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is muted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_muted View documentation}
 */
interface OnPlayerMutedEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_muted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player invokes the "smart pipette" over an entity.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_pipette View documentation}
 */
interface OnPlayerPipetteEvent {
  /** The player */
  readonly player_index: uint
  /** The item put in the cursor */
  readonly item: LuaItemPrototype
  /** If cheat mode was used to give a free stack of the item. */
  readonly used_cheat_mode: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_pipette
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after the player puts equipment in an equipment grid
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_placed_equipment View documentation}
 */
interface OnPlayerPlacedEquipmentEvent {
  readonly player_index: uint
  /** The equipment put in the equipment grid. */
  readonly equipment: LuaEquipment
  /** The equipment grid the equipment was put in. */
  readonly grid: LuaEquipmentGrid
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_placed_equipment
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is promoted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_promoted View documentation}
 */
interface OnPlayerPromotedEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_promoted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is removed (deleted) from the game. Not to be confused with the player logging of this is
 * different in that the player is deleted as if he never existed in the save file.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_removed View documentation}
 */
interface OnPlayerRemovedEvent {
  /** The player index that was removed */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_removed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after the player removes equipment from an equipment grid
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_removed_equipment View documentation}
 */
interface OnPlayerRemovedEquipmentEvent {
  readonly player_index: uint
  /** The equipment grid removed from. */
  readonly grid: LuaEquipmentGrid
  /** The equipment removed. */
  readonly equipment: string
  /** The count of equipment removed. */
  readonly count: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_removed_equipment
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player repairs an entity. Can be filtered using {@link LuaPlayerRepairedEntityEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_repaired_entity View documentation}
 */
interface OnPlayerRepairedEntityEvent {
  readonly player_index: uint
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_repaired_entity
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player respawns.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_respawned View documentation}
 */
interface OnPlayerRespawnedEvent {
  readonly player_index: uint
  /** The player port used to respawn if one was used. */
  readonly player_port?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_respawned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player rotates an entity. This event is only fired when the entity actually changes its orientation
 * -- pressing the rotate key on an entity that can't be rotated won't fire this event.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_rotated_entity View documentation}
 */
interface OnPlayerRotatedEntityEvent {
  /** The rotated entity. */
  readonly entity: LuaEntity
  /** The previous direction */
  readonly previous_direction: defines.direction
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_rotated_entity
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a player selects an area with a selection-tool item.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_selected_area View documentation}
 */
interface OnPlayerSelectedAreaEvent {
  /** The player doing the selection. */
  readonly player_index: uint
  /** The surface selected. */
  readonly surface: LuaSurface
  /** The area selected. */
  readonly area: BoundingBox
  /** The item used to select the area. */
  readonly item: string
  /** The entities selected. */
  readonly entities: LuaEntity[]
  /** The tiles selected. */
  readonly tiles: LuaTile[]
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_selected_area
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player sets a quickbar slot to anything (new value, or set to empty).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_set_quick_bar_slot View documentation}
 */
interface OnPlayerSetQuickBarSlotEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_set_quick_bar_slot
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player selects an area with a blueprint.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_setup_blueprint View documentation}
 */
interface OnPlayerSetupBlueprintEvent {
  /** The player doing the selection. */
  readonly player_index: uint
  /** The surface selected. */
  readonly surface: LuaSurface
  /** The area selected. */
  readonly area: BoundingBox
  /** The item used to select the area. */
  readonly item: string
  /** If normal selection or alt selection was used. */
  readonly alt: boolean
  /** The blueprint entity index to source entity mapping. Note: if any mod changes the blueprint this will be incorrect. */
  readonly mapping: LuaLazyLoadedValue<Record<uint, LuaEntity>>
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_setup_blueprint
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player toggles alt mode, also known as "show entity info".
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_toggled_alt_mode View documentation}
 */
interface OnPlayerToggledAltModeEvent {
  readonly player_index: uint
  /**
   * The new alt mode value. This value is a shortcut for accessing
   * {@link GameViewSettings.show_entity_info GameViewSettings::show_entity_info} on the player.
   */
  readonly alt_mode: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_toggled_alt_mode
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player toggles the map editor on or off.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_toggled_map_editor View documentation}
 */
interface OnPlayerToggledMapEditorEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_toggled_map_editor
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a players trash inventory changed in some way.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_trash_inventory_changed View documentation}
 */
interface OnPlayerTrashInventoryChangedEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_trash_inventory_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is un-banned.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_unbanned View documentation}
 */
interface OnPlayerUnbannedEvent {
  /** The player un-banned. */
  readonly player_index?: uint
  /** The player name un-banned. */
  readonly player_name: string
  /** The player that did the un-banning if any. */
  readonly by_player?: uint
  /** The reason the player was banned if any. */
  readonly reason?: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_unbanned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player is unmuted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_unmuted View documentation}
 */
interface OnPlayerUnmutedEvent {
  /** The player. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_unmuted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player uses a capsule that results in some game action.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_used_capsule View documentation}
 */
interface OnPlayerUsedCapsuleEvent {
  /** The player. */
  readonly player_index: uint
  /** The capsule item used. */
  readonly item: LuaItemPrototype
  /** The position the capsule was used. */
  readonly position: Position
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_used_capsule
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player uses spidertron remote to send a spidertron to a given position
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_player_used_spider_remote View documentation}
 */
interface OnPlayerUsedSpiderRemoteEvent {
  /** The player that used the remote. */
  readonly player_index: uint
  /** Spider vehicle which was requested to move. */
  readonly vehicle: LuaEntity
  /** Goal position to which spidertron was sent to. */
  readonly position: Position
  /** If the use was successful. It may fail when spidertron has different driver or when player is on different surface. */
  readonly success: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_player_used_spider_remote
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after an entity dies. Can be filtered using {@link LuaPostEntityDiedEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_post_entity_died View documentation}
 */
interface OnPostEntityDiedEvent {
  /** The ghost created by the entity dying if any. */
  readonly ghost?: LuaEntity
  /** The force that did the killing if any. */
  readonly force?: LuaForce
  /** Position where the entity died. */
  readonly position: Position
  /** The entity prototype of the entity that died. */
  readonly prototype: LuaEntityPrototype
  /** The damage type if any. */
  readonly damage_type?: LuaDamagePrototype
  /** The corpses created by the entity dying if any. */
  readonly corpses: LuaEntity[]
  /** The surface the entity was on. */
  readonly surface_index: uint
  /** The unit number the entity had if any. */
  readonly unit_number?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_post_entity_died
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when players uses an item to build something. Called before {@link OnBuiltEntityEvent on_built_entity}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_build View documentation}
 */
interface OnPreBuildEvent {
  /** The player who did the placing. */
  readonly player_index: uint
  /** Where the item was placed. */
  readonly position: Position
  /** Item was placed using shift building. */
  readonly shift_build: boolean
  /** The direction the item was facing when placed. */
  readonly direction: defines.direction
  /** If building this blueprint was flipped horizontally. */
  readonly flip_horizontal: boolean
  /** If building this blueprint was flipped vertically. */
  readonly flip_vertical: boolean
  /** Item was placed while moving. */
  readonly created_by_moving: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_build
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before one or more chunks are deleted using {@link LuaSurface.delete_chunk LuaSurface::delete_chunk}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_chunk_deleted View documentation}
 */
interface OnPreChunkDeletedEvent {
  readonly surface_index: uint
  /** The chunks to be deleted. */
  readonly positions: ChunkPosition[]
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_chunk_deleted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before entity copy-paste is done.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_entity_settings_pasted View documentation}
 */
interface OnPreEntitySettingsPastedEvent {
  readonly player_index: uint
  /** The source entity settings will be copied from. */
  readonly source: LuaEntity
  /** The destination entity settings will be copied to. */
  readonly destination: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_entity_settings_pasted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before a ghost entity is destroyed as a result of being marked for deconstruction. Can be filtered using
 * {@link LuaPreGhostDeconstructedEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_ghost_deconstructed View documentation}
 */
interface OnPreGhostDeconstructedEvent {
  /** The player that did the deconstruction if any. */
  readonly player_index?: uint
  readonly ghost: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_ghost_deconstructed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly before a permission group is deleted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_permission_group_deleted View documentation}
 */
interface OnPrePermissionGroupDeletedEvent {
  /** The player doing the deletion. */
  readonly player_index: uint
  /** The group to be deleted. */
  readonly group: LuaPermissionGroup
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_permission_group_deleted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly before a permission string is imported.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_permission_string_imported View documentation}
 */
interface OnPrePermissionStringImportedEvent {
  /** The player importing the string. */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_permission_string_imported
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a player queues something to be crafted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_player_crafted_item View documentation}
 */
interface OnPrePlayerCraftedItemEvent {
  /** The player doing the crafting. */
  readonly player_index: uint
  /** The recipe being queued. */
  readonly recipe: LuaRecipe
  /** The items removed from the players inventory to do the crafting. */
  readonly items: LuaInventory
  /** The number of times the recipe is being queued. */
  readonly queued_count: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_player_crafted_item
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before a players dies.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_player_died View documentation}
 */
interface OnPrePlayerDiedEvent {
  readonly player_index: uint
  readonly cause?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_player_died
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before a player leaves the game.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_player_left_game View documentation}
 */
interface OnPrePlayerLeftGameEvent {
  readonly player_index: uint
  readonly reason: defines.disconnect_reason
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_player_left_game
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the player finishes mining an entity, before the entity is removed from map. Can be filtered using
 * {@link LuaPrePlayerMinedEntityEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_player_mined_item View documentation}
 */
interface OnPrePlayerMinedItemEvent {
  /** The entity being mined */
  readonly entity: LuaEntity
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_player_mined_item
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before a player is removed (deleted) from the game. Not to be confused with the player logging of this is
 * different in that the player is deleted as if he never existed in the save file.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_player_removed View documentation}
 */
interface OnPrePlayerRemovedEvent {
  /** The player index that will be removed */
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_player_removed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before a player toggles the map editor on or off.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_player_toggled_map_editor View documentation}
 */
interface OnPrePlayerToggledMapEditorEvent {
  readonly player_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_player_toggled_map_editor
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly before a robot explodes cliffs.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_robot_exploded_cliff View documentation}
 */
interface OnPreRobotExplodedCliffEvent {
  readonly robot: LuaEntity
  readonly cliff: LuaEntity
  /** The cliff explosive used. */
  readonly item: LuaItemPrototype
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_robot_exploded_cliff
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called just before a script inventory is resized.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_script_inventory_resized View documentation}
 */
interface OnPreScriptInventoryResizedEvent {
  /** If done by console command; the player who ran the command. */
  readonly player_index?: uint
  /** The mod that did the resizing. This will be `"core"` if done by console command or scenario script. */
  readonly mod: string
  readonly inventory: LuaInventory
  /** The old inventory size. */
  readonly old_size: uint
  /** The new inventory size. */
  readonly new_size: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_script_inventory_resized
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called just before a surface is cleared (all entities removed and all chunks deleted).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_surface_cleared View documentation}
 */
interface OnPreSurfaceClearedEvent {
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_surface_cleared
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called just before a surface is deleted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_pre_surface_deleted View documentation}
 */
interface OnPreSurfaceDeletedEvent {
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_pre_surface_deleted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a research finishes.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_research_finished View documentation}
 */
interface OnResearchFinishedEvent {
  /** The researched technology */
  readonly research: LuaTechnology
  /** If the technology was researched by script. */
  readonly by_script: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_research_finished
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a research is reversed (unresearched).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_research_reversed View documentation}
 */
interface OnResearchReversedEvent {
  /** The technology un-researched */
  readonly research: LuaTechnology
  /** If the technology was un-researched by script. */
  readonly by_script: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_research_reversed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a technology research starts.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_research_started View documentation}
 */
interface OnResearchStartedEvent {
  /** The technology being researched */
  readonly research: LuaTechnology
  readonly last_research?: LuaTechnology
  /** Identifier of the event */
  readonly name: typeof defines.events.on_research_started
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a resource entity reaches 0 or its minimum yield for infinite resources.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_resource_depleted View documentation}
 */
interface OnResourceDepletedEvent {
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_resource_depleted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a construction robot builds an entity. Can be filtered using {@link LuaRobotBuiltEntityEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_robot_built_entity View documentation}
 */
interface OnRobotBuiltEntityEvent {
  /** The robot that did the building. */
  readonly robot: LuaEntity
  /** The entity built. */
  readonly created_entity: LuaEntity
  /** The item used to do the building. */
  readonly stack: LuaItemStack
  /** The tags associated with this entity if any. */
  readonly tags?: Tags
  /** Identifier of the event */
  readonly name: typeof defines.events.on_robot_built_entity
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a robot builds tiles.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_robot_built_tile View documentation}
 */
interface OnRobotBuiltTileEvent {
  /** The robot. */
  readonly robot: LuaEntity
  /** The position data. */
  readonly tiles: OldTileAndPosition[]
  /** The tile prototype that was placed. */
  readonly tile: LuaTilePrototype
  /** The item type used to build the tiles. */
  readonly item: LuaItemPrototype
  /** The stack used to build the tiles (may be empty if all of the items where used to build the tiles). */
  readonly stack: LuaItemStack
  /** The surface the tile(s) are build on. */
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_robot_built_tile
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called directly after a robot explodes cliffs.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_robot_exploded_cliff View documentation}
 */
interface OnRobotExplodedCliffEvent {
  readonly robot: LuaEntity
  /** The cliff explosive used. */
  readonly item: LuaItemPrototype
  /** Identifier of the event */
  readonly name: typeof defines.events.on_robot_exploded_cliff
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a robot mines an entity.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_robot_mined View documentation}
 */
interface OnRobotMinedEvent {
  /** The robot that did the mining. */
  readonly robot: LuaEntity
  /** The entity the robot just picked up. */
  readonly item_stack: SimpleItemStack
  /** Identifier of the event */
  readonly name: typeof defines.events.on_robot_mined
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after the results of an entity being mined are collected just before the entity is destroyed. After this event
 * any items in the buffer will be transferred into the robot as if they came from mining the entity. Can be filtered
 * using {@link LuaRobotMinedEntityEventFilter}.
 *
 * **Note**: The buffer inventory is special in that it's only valid during this event and has a dynamic size expanding
 * as more items are transferred into it.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_robot_mined_entity View documentation}
 */
interface OnRobotMinedEntityEvent {
  /** The robot doing the mining. */
  readonly robot: LuaEntity
  /** The entity that has been mined. */
  readonly entity: LuaEntity
  /** The temporary inventory that holds the result of mining the entity. */
  readonly buffer: LuaInventory
  /** Identifier of the event */
  readonly name: typeof defines.events.on_robot_mined_entity
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a robot mines tiles.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_robot_mined_tile View documentation}
 */
interface OnRobotMinedTileEvent {
  /** The robot. */
  readonly robot: LuaEntity
  /** The position data. */
  readonly tiles: OldTileAndPosition[]
  /** The surface the tile(s) were mined on. */
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_robot_mined_tile
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called before a robot mines an entity. Can be filtered using {@link LuaPreRobotMinedEntityEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_robot_pre_mined View documentation}
 */
interface OnRobotPreMinedEvent {
  /** The robot that's about to do the mining. */
  readonly robot: LuaEntity
  /** The entity which is about to be mined. */
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_robot_pre_mined
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a rocket silo is ordered to be launched.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_rocket_launch_ordered View documentation}
 */
interface OnRocketLaunchOrderedEvent {
  readonly rocket: LuaEntity
  readonly rocket_silo: LuaEntity
  /** The player that is riding the rocket, if any. */
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_rocket_launch_ordered
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when the rocket is launched.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_rocket_launched View documentation}
 */
interface OnRocketLaunchedEvent {
  readonly rocket: LuaEntity
  readonly rocket_silo?: LuaEntity
  /** The player that is riding the rocket, if any. */
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_rocket_launched
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a runtime mod setting is changed by a player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_runtime_mod_setting_changed View documentation}
 */
interface OnRuntimeModSettingChangedEvent {
  /**
   * If the `setting_type` is `"global"` and it was changed through the mod settings GUI, this is the index of the
   * player that changed the global setting. If the `setting_type` is `"runtime-per-user"` and it changed a current
   * setting of the player, this is the index of the player whose setting was changed. In all other cases, this is `nil`.
   */
  readonly player_index?: uint
  /** The prototype name of the setting that was changed. */
  readonly setting: string
  /** Either "runtime-per-user" or "runtime-global". */
  readonly setting_type: "runtime-per-user" | "runtime-global"
  /** Identifier of the event */
  readonly name: typeof defines.events.on_runtime_mod_setting_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called just after a script inventory is resized.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_script_inventory_resized View documentation}
 */
interface OnScriptInventoryResizedEvent {
  /** If done by console command; the player who ran the command. */
  readonly player_index?: uint
  /** The mod that did the resizing. This will be `"core"` if done by console command or scenario script. */
  readonly mod: string
  readonly inventory: LuaInventory
  /** The old inventory size. */
  readonly old_size: uint
  /** The new inventory size. */
  readonly new_size: uint
  /** Any items which didn't fit into the new inventory size. */
  readonly overflow_inventory: LuaInventory
  /** Identifier of the event */
  readonly name: typeof defines.events.on_script_inventory_resized
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a {@link LuaSurface.request_path LuaSurface::request_path} call completes.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_script_path_request_finished View documentation}
 */
interface OnScriptPathRequestFinishedEvent {
  /** The actual path that the pathfinder has determined. `nil` if pathfinding failed. */
  readonly path?: PathfinderWaypoint[]
  /** Handle to associate the callback with a particular call to {@link LuaSurface.request_path LuaSurface::request_path}. */
  readonly id: uint
  /** Indicates that the pathfinder failed because it is too busy, and that you can retry later. */
  readonly try_again_later: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_script_path_request_finished
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a script trigger effect is triggered.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_script_trigger_effect View documentation}
 */
interface OnScriptTriggerEffectEvent {
  /** The effect_id specified in the trigger effect. */
  readonly effect_id: string
  /** The surface the effect happened on. */
  readonly surface_index: uint
  readonly source_position?: Position
  readonly source_entity?: LuaEntity
  readonly target_position?: Position
  readonly target_entity?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_script_trigger_effect
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity of type `radar` finishes scanning a sector. Can be filtered for the radar using
 * {@link LuaSectorScannedEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_sector_scanned View documentation}
 */
interface OnSectorScannedEvent {
  /** The radar that did the scanning. */
  readonly radar: LuaEntity
  /** The chunk scanned. */
  readonly chunk_position: ChunkPosition
  /** Area of the scanned chunk. */
  readonly area: BoundingBox
  /** Identifier of the event */
  readonly name: typeof defines.events.on_sector_scanned
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after the selected entity changes for a given player.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_selected_entity_changed View documentation}
 */
interface OnSelectedEntityChangedEvent {
  /** The player whose selected entity changed. */
  readonly player_index: uint
  /** The last selected entity if it still exists and there was one. */
  readonly last_entity?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_selected_entity_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a spider finishes moving to its autopilot position.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_spider_command_completed View documentation}
 */
interface OnSpiderCommandCompletedEvent {
  /** Spider vehicle which was requested to move. */
  readonly vehicle: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_spider_command_completed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a translation request generated through
 * {@link LuaPlayer.request_translation LuaPlayer::request_translation} is translated.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_string_translated View documentation}
 */
interface OnStringTranslatedEvent {
  /** The player whose locale was used for the translation. */
  readonly player_index: uint
  /** The localised string being translated. */
  readonly localised_string: LocalisedString
  /** The translated `localised_string`. */
  readonly result: string
  /** Whether the requested localised string was valid and could be translated. */
  readonly translated: boolean
  /** Identifier of the event */
  readonly name: typeof defines.events.on_string_translated
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called just after a surface is cleared (all entities removed and all chunks deleted).
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_surface_cleared View documentation}
 */
interface OnSurfaceClearedEvent {
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_surface_cleared
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a surface is created.
 *
 * **Note**: This is not called when the default surface is created as it will always exist.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_surface_created View documentation}
 */
interface OnSurfaceCreatedEvent {
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_surface_created
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a surface is deleted.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_surface_deleted View documentation}
 */
interface OnSurfaceDeletedEvent {
  readonly surface_index: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_surface_deleted
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called after a surface is imported.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_surface_imported View documentation}
 */
interface OnSurfaceImportedEvent {
  readonly surface_index: uint
  /** The original surface name. */
  readonly original_name: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_surface_imported
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a surface is renamed.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_surface_renamed View documentation}
 */
interface OnSurfaceRenamedEvent {
  readonly surface_index: uint
  readonly old_name: string
  readonly new_name: string
  /** Identifier of the event */
  readonly name: typeof defines.events.on_surface_renamed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when {@link LuaForce.reset_technology_effects LuaForce::reset_technology_effects} is finished.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_technology_effects_reset View documentation}
 */
interface OnTechnologyEffectsResetEvent {
  readonly force: LuaForce
  /** Identifier of the event */
  readonly name: typeof defines.events.on_technology_effects_reset
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * It is fired once every tick. Since this event is fired every tick, its handler shouldn't include performance heavy code.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_tick View documentation}
 */
interface OnTickEvent {
  /** Identifier of the event */
  readonly name: typeof defines.events.on_tick
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a train changes state (started to stopped and vice versa)
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_train_changed_state View documentation}
 */
interface OnTrainChangedStateEvent {
  readonly train: LuaTrain
  readonly old_state: defines.train_state
  /** Identifier of the event */
  readonly name: typeof defines.events.on_train_changed_state
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a new train is created either through disconnecting/connecting an existing one or building a new one.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_train_created View documentation}
 */
interface OnTrainCreatedEvent {
  readonly train: LuaTrain
  /** The first old train id when splitting/merging trains. */
  readonly old_train_id_1?: uint
  /** The second old train id when splitting/merging trains. */
  readonly old_train_id_2?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_train_created
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a trains schedule is changed either by the player or through script.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_train_schedule_changed View documentation}
 */
interface OnTrainScheduleChangedEvent {
  readonly train: LuaTrain
  /** The player who made the change if any. */
  readonly player_index?: uint
  /** Identifier of the event */
  readonly name: typeof defines.events.on_train_schedule_changed
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity with a trigger prototype (such as capsules) create an entity AND that trigger prototype defined
 * `trigger_created_entity="true"`.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_trigger_created_entity View documentation}
 */
interface OnTriggerCreatedEntityEvent {
  readonly entity: LuaEntity
  readonly source?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_trigger_created_entity
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when an entity with a trigger prototype (such as capsules) fire an artillery projectile AND that trigger
 * prototype defined `trigger_fired_artillery="true"`.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_trigger_fired_artillery View documentation}
 */
interface OnTriggerFiredArtilleryEvent {
  readonly entity: LuaEntity
  readonly source?: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_trigger_fired_artillery
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a unit is added to a unit group.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_unit_added_to_group View documentation}
 */
interface OnUnitAddedToGroupEvent {
  readonly unit: LuaEntity
  readonly group: LuaUnitGroup
  /** Identifier of the event */
  readonly name: typeof defines.events.on_unit_added_to_group
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a new unit group is created, before any members are added to it.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_unit_group_created View documentation}
 */
interface OnUnitGroupCreatedEvent {
  readonly group: LuaUnitGroup
  /** Identifier of the event */
  readonly name: typeof defines.events.on_unit_group_created
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a unit group finishes gathering and starts executing its command.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_unit_group_finished_gathering View documentation}
 */
interface OnUnitGroupFinishedGatheringEvent {
  readonly group: LuaUnitGroup
  /** Identifier of the event */
  readonly name: typeof defines.events.on_unit_group_finished_gathering
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a unit is removed from a unit group.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_unit_removed_from_group View documentation}
 */
interface OnUnitRemovedFromGroupEvent {
  readonly unit: LuaEntity
  readonly group: LuaUnitGroup
  /** Identifier of the event */
  readonly name: typeof defines.events.on_unit_removed_from_group
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * Called when a worker (construction or logistic) robot expires through a lack of energy.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#on_worker_robot_expired View documentation}
 */
interface OnWorkerRobotExpiredEvent {
  readonly robot: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.on_worker_robot_expired
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * A static event mods can use to tell other mods they built something by script. This event is only raised if a mod
 * does so with {@link LuaBootstrap.raise_event LuaBootstrap::raise_event} or
 * {@link LuaBootstrap.raise_script_built LuaBootstrap::raise_script_built}, or when `raise_built` is passed to
 * {@link LuaSurface.create_entity LuaSurface::create_entity}. Can be filtered using {@link LuaScriptRaisedBuiltEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#script_raised_built View documentation}
 */
interface ScriptRaisedBuiltEvent {
  /** The entity that has been built. */
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.script_raised_built
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * A static event mods can use to tell other mods they destroyed something by script. This event is only raised if a mod
 * does so with {@link LuaBootstrap.raise_event LuaBootstrap::raise_event} or
 * {@link LuaBootstrap.raise_script_destroy LuaBootstrap::raise_script_destroy}, or when `raise_destroy` is passed to
 * {@link LuaEntity.destroy LuaEntity::destroy}. Can be filtered using {@link LuaScriptRaisedDestroyEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#script_raised_destroy View documentation}
 */
interface ScriptRaisedDestroyEvent {
  /** The entity that was destroyed. */
  readonly entity: LuaEntity
  /** Identifier of the event */
  readonly name: typeof defines.events.script_raised_destroy
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * A static event mods can use to tell other mods they revived something by script. This event is only raised if a mod
 * does so with {@link LuaBootstrap.raise_event LuaBootstrap::raise_event} or
 * {@link LuaBootstrap.raise_script_revive LuaBootstrap::raise_script_revive}, or when `raise_revive` is passed to
 * {@link LuaEntity.revive LuaEntity::revive}. Can be filtered using {@link LuaScriptRaisedReviveEventFilter}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#script_raised_revive View documentation}
 */
interface ScriptRaisedReviveEvent {
  /** The entity that was revived. */
  readonly entity: LuaEntity
  /** The tags associated with this entity, if any. */
  readonly tags?: Tags
  /** Identifier of the event */
  readonly name: typeof defines.events.script_raised_revive
  /** Tick the event was generated. */
  readonly tick: uint
}

/**
 * A static event mods can use to tell other mods they changed tiles on a surface by script. This event is only raised
 * if a mod does so with {@link LuaBootstrap.raise_event LuaBootstrap::raise_event} or
 * {@link LuaBootstrap.raise_script_set_tiles LuaBootstrap::raise_script_set_tiles}, or when `raise_event` is passed to
 * {@link LuaSurface.set_tiles LuaSurface::set_tiles}.
 *
 * {@link https://lua-api.factorio.com/next/Events.html#script_raised_set_tiles View documentation}
 */
interface ScriptRaisedSetTilesEvent {
  /** The surface whose tiles were changed. */
  readonly surface_index: uint
  /** The tiles that were changed. */
  readonly tiles: Tile[]
  /** Identifier of the event */
  readonly name: typeof defines.events.script_raised_set_tiles
  /** Tick the event was generated. */
  readonly tick: uint
}

/** An event id. */
type EventId<T extends table, F extends table | void = void> = uint & {
  readonly _eventData: T
  readonly _filter: F
}

/**
 * An event id generated by {@link LuaBootstrap.generate_event_name LuaBootstrap::generate_event_name} and raisable via
 * {@link LuaBootstrap.raise_event LuaBootstrap::raise_event}.
 */
type CustomEventId<T extends table> = EventId<T> & {
  _customEventIdBrand: any
}
