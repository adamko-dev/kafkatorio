// Generated by TypeScriptGenerator - do not edit this file manually
interface FactorioObjectData {
    object_name: string;
}

interface FactorioEvent<T extends FactorioObjectData> {
    data: T;
    event_type: string;
    factorio_version: string;
    mod_version: string;
    tick: uint;
}

interface Colour {
    alpha: float;
    blue: float;
    green: float;
    red: float;
}

interface PositionData {
    x: double;
    y: double;
}

interface PlayerData extends FactorioObjectData {
    associated_characters_unit_numbers: uint[];
    character_unit_number: uint | null;
    chat_colour: Colour;
    colour: Colour;
    last_online: uint;
    name: string;
    object_name: string;
    position: PositionData;
}

interface EntityData extends FactorioObjectData {
    active: boolean;
    health: double | null;
    health_ratio: double;
    name: string;
    object_name: string;
    player_index: uint | null;
    position: PositionData;
    surface_index: int;
    type: string;
    unit_number: uint | null;
}

interface SurfaceData extends FactorioObjectData {
    daytime: double;
    index: uint;
    name: string;
    object_name: string;
}

interface ConsoleChatMessage extends FactorioObjectData {
    author_player_index: uint | null;
    content: string;
    object_name: string;
}

interface FactorioTile extends FactorioObjectData {
    object_name: string;
    position: PositionData;
    prototype_name: string;
    surface_index: int;
}

interface FactorioTilesMap extends FactorioObjectData {
    object_name: string;
    tiles: Map<PositionData, FactorioTile>;
}

interface FactorioTiles extends FactorioObjectData {
    object_name: string;
    tiles: FactorioTile[];
}

interface FactorioPrototype {
    object_name: string;
}

interface FactorioMapTilePrototype extends FactorioPrototype {
    can_be_mined: boolean;
    collision_masks: string[];
    layer: uint;
    map_color: Colour;
    name: string;
    object_name: string;
    order: string;
}