@file:Suppress("INTERFACE_WITH_SUPERCLASS", "OVERRIDING_FINAL_MEMBER", "RETURN_TYPE_MISMATCH_ON_OVERRIDE", "CONFLICTING_OVERLOADS")

import kotlin.js.*
import org.khronos.webgl.*
import org.w3c.dom.*
import org.w3c.dom.events.*
import org.w3c.dom.parsing.*
import org.w3c.dom.svg.*
import org.w3c.dom.url.*
import org.w3c.fetch.*
import org.w3c.files.*
import org.w3c.notifications.*
import org.w3c.performance.*
import org.w3c.workers.*
import org.w3c.xhr.*

external enum class LuaLibFeature {
    ArrayConcat /* = "ArrayConcat" */,
    ArrayEntries /* = "ArrayEntries" */,
    ArrayEvery /* = "ArrayEvery" */,
    ArrayFilter /* = "ArrayFilter" */,
    ArrayForEach /* = "ArrayForEach" */,
    ArrayFind /* = "ArrayFind" */,
    ArrayFindIndex /* = "ArrayFindIndex" */,
    ArrayIncludes /* = "ArrayIncludes" */,
    ArrayIndexOf /* = "ArrayIndexOf" */,
    ArrayIsArray /* = "ArrayIsArray" */,
    ArrayJoin /* = "ArrayJoin" */,
    ArrayMap /* = "ArrayMap" */,
    ArrayPush /* = "ArrayPush" */,
    ArrayReduce /* = "ArrayReduce" */,
    ArrayReduceRight /* = "ArrayReduceRight" */,
    ArrayReverse /* = "ArrayReverse" */,
    ArrayShift /* = "ArrayShift" */,
    ArrayUnshift /* = "ArrayUnshift" */,
    ArraySort /* = "ArraySort" */,
    ArraySlice /* = "ArraySlice" */,
    ArraySome /* = "ArraySome" */,
    ArraySplice /* = "ArraySplice" */,
    ArrayToObject /* = "ArrayToObject" */,
    ArrayFlat /* = "ArrayFlat" */,
    ArrayFlatMap /* = "ArrayFlatMap" */,
    ArraySetLength /* = "ArraySetLength" */,
    Await /* = "Await" */,
    Class /* = "Class" */,
    ClassExtends /* = "ClassExtends" */,
    CloneDescriptor /* = "CloneDescriptor" */,
    Decorate /* = "Decorate" */,
    DecorateParam /* = "DecorateParam" */,
    Delete /* = "Delete" */,
    DelegatedYield /* = "DelegatedYield" */,
    Error /* = "Error" */,
    FunctionBind /* = "FunctionBind" */,
    Generator /* = "Generator" */,
    InstanceOf /* = "InstanceOf" */,
    InstanceOfObject /* = "InstanceOfObject" */,
    Iterator /* = "Iterator" */,
    Map /* = "Map" */,
    MathAtan2 /* = "MathAtan2" */,
    New /* = "New" */,
    Number /* = "Number" */,
    NumberIsFinite /* = "NumberIsFinite" */,
    NumberIsNaN /* = "NumberIsNaN" */,
    NumberToString /* = "NumberToString" */,
    ObjectAssign /* = "ObjectAssign" */,
    ObjectDefineProperty /* = "ObjectDefineProperty" */,
    ObjectEntries /* = "ObjectEntries" */,
    ObjectFromEntries /* = "ObjectFromEntries" */,
    ObjectGetOwnPropertyDescriptor /* = "ObjectGetOwnPropertyDescriptor" */,
    ObjectGetOwnPropertyDescriptors /* = "ObjectGetOwnPropertyDescriptors" */,
    ObjectKeys /* = "ObjectKeys" */,
    ObjectRest /* = "ObjectRest" */,
    ObjectValues /* = "ObjectValues" */,
    OptionalChainAccess /* = "OptionalChainAccess" */,
    OptionalFunctionCall /* = "OptionalFunctionCall" */,
    OptionalMethodCall /* = "OptionalMethodCall" */,
    ParseFloat /* = "ParseFloat" */,
    ParseInt /* = "ParseInt" */,
    Promise /* = "Promise" */,
    PromiseAll /* = "PromiseAll" */,
    PromiseAllSettled /* = "PromiseAllSettled" */,
    PromiseAny /* = "PromiseAny" */,
    PromiseRace /* = "PromiseRace" */,
    Set /* = "Set" */,
    SetDescriptor /* = "SetDescriptor" */,
    WeakMap /* = "WeakMap" */,
    WeakSet /* = "WeakSet" */,
    SourceMapTraceBack /* = "SourceMapTraceBack" */,
    Spread /* = "Spread" */,
    StringAccess /* = "StringAccess" */,
    StringCharAt /* = "StringCharAt" */,
    StringCharCodeAt /* = "StringCharCodeAt" */,
    StringConcat /* = "StringConcat" */,
    StringEndsWith /* = "StringEndsWith" */,
    StringIncludes /* = "StringIncludes" */,
    StringPadEnd /* = "StringPadEnd" */,
    StringPadStart /* = "StringPadStart" */,
    StringReplace /* = "StringReplace" */,
    StringSlice /* = "StringSlice" */,
    StringSplit /* = "StringSplit" */,
    StringStartsWith /* = "StringStartsWith" */,
    StringSubstr /* = "StringSubstr" */,
    StringSubstring /* = "StringSubstring" */,
    StringTrim /* = "StringTrim" */,
    StringTrimEnd /* = "StringTrimEnd" */,
    StringTrimStart /* = "StringTrimStart" */,
    Symbol /* = "Symbol" */,
    SymbolRegistry /* = "SymbolRegistry" */,
    TypeOf /* = "TypeOf" */,
    Unpack /* = "Unpack" */
}